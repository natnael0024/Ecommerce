# Step 1: Use an official PHP image with the necessary extensions for Laravel
FROM php:8.1-fpm-alpine as base

# Step 2: Install system dependencies and PHP extensions
RUN apk --no-cache add \
    libpng-dev \
    libjpeg-turbo-dev \
    libfreetype6-dev \
    libzip-dev \
    bash \
    nginx \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd zip pdo pdo_mysql \
    && apk del libpng-dev libjpeg-turbo-dev libfreetype6-dev

# Step 3: Install Composer (dependency manager for PHP)
FROM base as composer

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Step 4: Set working directory and copy application files
WORKDIR /var/www

# Copy the Laravel project files into the container
COPY . .

# Install Laravel dependencies using Composer
RUN composer install --optimize-autoloader --no-dev

# Step 5: Set up Nginx and configure it to serve Laravel
COPY docker/nginx/laravel.conf /etc/nginx/conf.d/default.conf

# Step 6: Set the proper permissions (ensure the web server can access the files)
RUN chown -R www-data:www-data /var/www && chmod -R 775 /var/www/storage

# Step 7: Expose port 80 to access the application
EXPOSE 80

# Step 8: Start PHP-FPM and Nginx in the background
CMD service nginx start && php-fpm
