# FROM php:8.2-apache

# RUN apt-get update && apt-get install -y \
#     libzip-dev \
#     zip \
#     unzip \
#     git \
#     && docker-php-ext-install zip \
#     && a2enmod rewrite

# RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# COPY laravel_api/. /var/www/html
# WORKDIR /var/www/html

# # COPY apache2.conf /etc/apache2/apache2.conf
# # COPY 000-default.conf /etc/apache2/sites-enabled/000-default.conf
# ENV COMPOSER_ALLOW_SUPERUSER=1
# RUN composer install
# RUN chown -R www-data:www-data /var/www/html/storage
# RUN chmod -R 777 /var/www/html/storage

# EXPOSE 8000

# # Start PHP-FPM
# CMD ["apache2-foreground"]

# //////////
FROM php:8.2-apache

# Install required system packages
RUN apt-get update && apt-get install -y \
    libzip-dev \
    zip \
    unzip \
    git \
    && docker-php-ext-install zip \
    && a2enmod rewrite

# Install Composer globally
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set the correct working directory
WORKDIR /var/www

# Copy Laravel project files
COPY laravel_api/. /var/www

# Ensure the correct document root is used
RUN sed -i 's|/var/www/html|/var/www/public|g' /etc/apache2/sites-available/000-default.conf

# Set environment variables
ENV COMPOSER_ALLOW_SUPERUSER=1

# Install dependencies
RUN composer install --no-dev --optimize-autoloader

# Set correct permissions
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
RUN chmod -R 775 /var/www/storage /var/www/bootstrap/cache

# Expose the web server port
EXPOSE 80

# Start Apache
CMD ["apache2-foreground"]

# //////
# FROM php:8.2-fpm-alpine AS composer-base

# # Install system dependencies
# RUN apk add --no-cache --virtual .build-deps \
#     autoconf \
#     curl \
#     git \
#     libzip-dev \
#     unzip

# # Install PHP extensions
# RUN docker-php-ext-install pdo_mysql zip

# # Get latest Composer
# COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer

# WORKDIR /app

# FROM nginx:alpine

# COPY --from=composer-base /app /app
# COPY laravel_api/. /app

# # Copy nginx configuration
# COPY laravel_api/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf

# # Set document root
# RUN sed -i "s!/usr/share/nginx/html!/app/public!g" /etc/nginx/conf.d/default.conf

# EXPOSE 80

# CMD ["nginx", "-g", "daemon off;"]
